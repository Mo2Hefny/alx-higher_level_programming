The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import function:
    >>> add_integer = __import__('0-add_integer').add_integer

Numbers
-------

Adding two integers
    >>> add_integer(6, 4)
    10

Substracting two integers
    >>> add_integer(12, -18)
    -6

Should work with one given input
    >>> add_integer(2)
    100

Adding a float and an integer
    >>> add_integer(2.5, 12)
    14
  
Adding two floats
    >>> add_integer(4.9, 11.3)
    15

Invalid input
-------------

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

Case Overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow2:
    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

Adding None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer


Passing a string
    >>> add_integer('alx', 1)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer(1, 'alx')
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a list
    >>> add_integer([1, 2, 3], 9)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer(9, [1, 2, 3])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer
